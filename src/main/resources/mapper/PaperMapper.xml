<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lito.fupin.meta.paper.dao.PaperDao">

    <insert id="createPaper" parameterType="com.lito.fupin.meta.paper.entity.Paper">
        insert into paper
        (paper_id, title, content, upload_time, upload_user_id, category_id, public, img_url, file_url, author, organize_id)
        values
        (#{paperId}, #{title}, #{content}, #{uploadTime}, #{uploadUserId}, #{categoryId}, #{isPublic}, #{imgUrl}, #{fileUrl}, #{author}, #{organizeId})
    </insert>

    <!--配置paper表和Paper对象的字段映射 -->
    <resultMap id="paperMap" type="com.lito.fupin.meta.paper.entity.Paper">
        <result property="paperId" column="paper_id"/>
        <result property="uploadTime" column="upload_time"/>
        <result property="uploadUserId" column="upload_user_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="isPublic" column="public"/>
        <result property="imgUrl" column="img_url"/>
        <result property="fileUrl" column="file_url"/>
        <result property="imgUrl" column="img_url"/>
        <result property="organizeId" column="organize_id"/>
        <result property="organizeName" column="organize_name"/>
        <result property="approveTime" column="approve_time"/>
    </resultMap>

    <!-- 读取一个机构下的所有未审核文章-->
    <select id="listPaperUnApprove" parameterType="map"
            resultMap="paperMap">
        select a.ids, paper_id, title, upload_time, upload_user_id, public, author, a.organize_id, organize_name
        from paper a left join organize b on a.organize_id = b.organize_id
        where 1 = 1
        and a.organize_id = #{organizeId}
        and approve_time is null
    </select>

    <!--读取文章的简要信息，不包含详情-->
    <select id="getPaperTinyByPaperId" parameterType="java.lang.String"
            resultMap="paperMap">
        select ids, paper_id, title, upload_time, upload_user_id, status, approve_remark, approve_time,
        category_id, public, approve_user_id, author, views, organize_id
        from paper
        where paper_id=#{paperId}
    </select>

    <!--读取文章的详细信息-->
    <select id="getPaperDetailByPaperId" parameterType="java.lang.String"
            resultMap="paperMap">
        select * from paper
        where paper_id=#{paperId}
    </select>

    <!--增量修改文章信息-->
    <update id="updatePaper" parameterType="com.lito.fupin.meta.paper.entity.Paper">
        update paper set
        update_time=now()
        <choose>
            <when test="title!=null">
                ,title=#{title}
            </when>
        </choose>
        <choose>
            <when test="content!=null">
                ,content=#{content}
            </when>
        </choose>
        <choose>
            <when test="status!=null">
                ,status=#{status}
            </when>
        </choose>
        <choose>
            <when test="approveRemark!=null">
                ,approve_remark=#{approveRemark}
            </when>
        </choose>
        <choose>
            <when test="approveTime!=null">
                ,approve_time=#{approveTime}
            </when>
        </choose>
        <choose>
            <when test="categoryId!=null">
                ,category_id=#{categoryId}
            </when>
        </choose>
        <choose>
            <when test="isPublic!=null">
                ,public =#{isPublic}
            </when>
        </choose>
        <choose>
            <when test="imgUrl!=null">
                ,img_url=#{imgUrl}
            </when>
        </choose>
        <choose>
            <when test="fileUrl!=null">
                ,file_url=#{fileUrl}
            </when>
        </choose>
        <choose>
            <when test="approveUserId!=null">
                ,approve_user_id=#{approveUserId}
            </when>
        </choose>
        <choose>
            <when test="author!=null">
                ,author=#{author}
            </when>
        </choose>
        <choose>
            <when test="views!=null">
                ,views=#{views}
            </when>
        </choose>
        <choose>
            <when test="organizeId!=null">
                ,organize_id=#{organizeId}
            </when>
        </choose>
        where paper_id=#{paperId}
    </update>

    <!--查询文章用于网站显示，指定分类和单位，分页-->
    <select id="listPaper" parameterType="map"
            resultMap="paperMap">
        select ids, paper_id, title, views, approve_time, upload_time from paper
        where 1=1
        and status='通过审核'
        <choose>
            <when test="categoryId!=null">
                and category_id=#{categoryId}
            </when>
        </choose>
        <choose>
            <when test="organizeId!=null">
                and organize_id=#{organizeId}
            </when>
        </choose>
        order by ids desc
        limit #{offset},#{size}
    </select>

    <!--查询我创建的文章-->
    <select id="listMyPendingPaper" parameterType="map"
            resultMap="paperMap">
        select ids, paper_id, title, views, approve_time, upload_time from paper
        where 1=1
        and upload_user_id=#{userId}
        limit #{offset},#{size}
    </select>

    <!--增加一次阅读次数-->
    <update id="updateAddView" parameterType="java.lang.String">
        update paper set
        views=views+1
        where paper_id=#{paperId}
    </update>

    <delete id="deletePaper" parameterType="java.lang.String">
        delete from paper
        where paper_id=#{paperId}
    </delete>

    <!--    读取一个机构的所有文章-->
    <select id="listPaperByOrganize" parameterType="java.lang.String"
            resultMap="paperMap">
        select ids, paper_id, title, views, approve_time, upload_time, status from paper
        where organize_id=#{organizeId}
    </select>

<!--    读取上一篇文章的标题信息-->
    <select id="getLastPaper" parameterType="map"
            resultMap="paperMap">
            select ids, paper_id, title, upload_time from paper
            where 1 = 1
            and status='通过审核'
            and public='true'
            and category_id=#{categoryId}
            <![CDATA[
            and ids<#{ids}
            ]]>
            order by upload_time desc
            limit 1
    </select>

<!--    读取下一篇文章的标题信息-->
    <select id="getNextPaper" parameterType="map"
            resultMap="paperMap">
            select ids, paper_id, title, upload_time from paper
            where 1 = 1
            and status='通过审核'
            and public='true'
            and category_id=#{categoryId}
            <![CDATA[
            and ids>#{ids}
            ]]>
            order by upload_time
            limit 1
    </select>
</mapper>